
RICE_north_atlantic_appoint_expedition_leader = {
	category = interaction_category_diplomacy
	
	desc = RICE_north_atlantic_appoint_expedition_leader_desc
	ai_maybe = yes
	ai_min_reply_days = 0
	ai_max_reply_days = 0

	cooldown_against_recipient = { years = 5 }
	
	is_shown = {
		NOT = { scope:actor = scope:recipient }
		scope:actor = {
			has_character_flag = RICE_north_atlantic_ongoing_expedition
			NOT = {
				any_owned_story = {
					story_type = RICE_story_cycle_north_atlantic_expedition
					has_variable = RICE_expedition_set_sail
				}
			}
			is_ai = no # AI will never do this as they will always automatically pick someone from the initial event or have a randomly generated leader
		}
		scope:recipient = {
			is_courtier_of = scope:actor
			is_ai = yes
		}
	}

	is_valid_showing_failures_only = {
		scope:recipient = {
			is_ruler = no
			is_imprisoned = no
			is_available = yes
		}
	}
	
	# Pay them extra
	send_option = {
		is_shown = {
			exists = scope:recipient
		}
		flag = pay_to_lead_expedition
		localization = RICE_pay_to_lead_expedition
	}

	on_accept = {
		scope:actor = {
			random_owned_story = {
				limit = {
					story_type = RICE_story_cycle_north_atlantic_expedition
				}
				set_variable = {
					name = RICE_expedition_leader
					value = scope:recipient
				}
			}
			trigger_event = north_atlantic.0031
		}
		scope:recipient = {
			custom_tooltip = RICE_north_atlantic_appoint_expedition_leader_accept_desc
			show_as_tooltip = {
				add_prestige = 100				
			}		
			add_character_flag = {
				flag = planning_an_activity
				days = 180
			}	
			add_character_flag = {
				flag = blocked_from_leaving
				years = 4 # Little extra buffer just in case
			}
			set_variable = {
				name = RICE_expedition_leader
				value = story_owner.var:RICE_expedition_leader_choice
			}
		}
		
		
		if = {
			limit = { always = scope:pay_to_lead_expedition }
			scope:actor = {
				pay_short_term_gold = {
					gold = {
						value = bribe_value
						#multiply = 1
					}
					target = scope:recipient
				}
				stress_impact = {
					greedy = minor_stress_impact_gain
				}
			}
		}
	}

	ai_accept = {
 		base = -25

		# AI take opinion into account, but reduced so they'll at least occasionally accept from folks they dislike.
		opinion_modifier = {
			who = scope:recipient
			opinion_target = scope:actor
			multiplier = 1.3
			desc = AI_OPINION_REASON
		}

 		#Current roles
 		modifier = {
 			is_commanding_army = yes
 			add = -20
 			desc = AI_MY_LIEGES_COMMANDER
 		}
 		modifier = {
 			is_councillor = yes
 			add = -40
 			desc = AI_ON_THE_COUNCIL
 		}

		modifier = {		
			trigger = { scope:recipient = { has_court_position = court_physician_court_position } }			
 			add = -100
 			desc = AI_COURT_PHYSICIAN
 		}

 		#Relations & relatives (with actor)

 		modifier = {
 			has_relation_friend = scope:actor
 			add = 10
 			desc = AI_YOUR_FRIEND
 		}

 		modifier = {
 			this.dynasty.dynast = scope:actor
 			add = 10
 			desc = AI_YOU_ARE_THE_DYNAST
 		}

 		modifier = {
 			this.house.house_head = scope:actor
 			add = 10
 			desc = AI_YOU_ARE_THE_HOUSE_HEAD
 		}

 		modifier = {
 			is_spouse_of = scope:actor
 			add = -100
 			desc = AI_YOUR_SPOUSE
 		}

 		#Relations & relatives (with host)
 		modifier = {
 			exists = liege
 			has_relation_lover = liege
 			add = -100
 			desc = AI_THEIR_LOVER
 		}

 		modifier = {
 			add = -50
 			desc = AI_INSPIRED
 			exists = inspiration
			inspiration = {
				NOT = {
					exists = inspiration_sponsor
				}
			}
 		}

 		modifier = {
 			add = -500
 			desc = AI_SPONSORED_INSPIRATION
 			exists = inspiration
			inspiration = {
				exists = inspiration_sponsor
			}
 		}
		
		modifier = {
			add = {
				value = 20
				if = {
					limit = {
						has_trait = greedy
					}
					multiply = 1.5
				}
				else_if = {
					limit = {
						has_trait = generous
					}
					multiply = 0.5
				}
			}
			scope:pay_to_lead_expedition = yes
			desc = RICE_paid_me_extra_to_accept
		}

		# PERSONALITY
		# Boldness always plays a factor.
		modifier = {
			add = {
				value = ai_boldness
				multiply = 0.3
			}
			NOT = { ai_boldness = 0 }
			desc = AI_VALUE_MODIFIER_BOLDNESS
		}

		# Energy always plays a factor.
		modifier = {
			add = {
				value = ai_energy
				multiply = 0.3
			}
			NOT = { ai_boldness = 0 }
			desc = AI_VALUE_MODIFIER_ENERGY
		}

		# Honor always plays a factor.
		modifier = {
			add = {
				value = ai_honor
				multiply = 0.3
			}
			NOT = { ai_honor = 0 }
			desc = AI_VALUE_MODIFIER_HONOR
		}

		# TRAITS
		modifier = {
			add = 15
			scope:recipient = {
				has_trait = brave
			}
			desc = RICE_appoint_expedition_leader_brave_acceptance
		}
		modifier = {
			add = -15
			scope:recipient = {
				has_trait = craven
			}
			desc = RICE_appoint_expedition_leader_craven_acceptance
		}
		modifier = {
			add = 30
			scope:recipient = {
				has_trait = ambitious
			}
			desc = RICE_appoint_expedition_leader_ambitious_acceptance
		}
		modifier = {
			add = -30
			scope:recipient = {
				has_trait = lazy
			}
			desc = RICE_appoint_expedition_leader_lazy_acceptance
		}


	}

	on_decline = {
		# Scope:actor gains some stress over the whole ordeal.
		scope:actor = {
			trigger_event = north_atlantic.0032
			show_as_tooltip = {
				add_prestige = -50
				# stress_impact = {
				# 	base = miniscule_stress_impact_gain
				# 	ambitious = miniscule_stress_impact_gain
				# 	shy = miniscule_stress_impact_gain
				# 	impatient = miniscule_stress_impact_gain
				# 	arrogant = miniscule_stress_impact_gain
				# }				
			}
			# send_interface_toast = {
			# 	title = RICE_niger_delta_kola_nut_interaction.decline.actor.tt
			# 	left_icon = scope:recipient
			# 	add_stress = minor_stress_gain
			# }
		}
		# Scope:actor loses opinion of scope:recipient.
		show_as_tooltip = {
			scope:recipient = {
				reverse_add_opinion = {
					target = scope:actor
					modifier = rejected_opinion
				}
			}			
		}
	}

	# RICE_recent_expedition_candidate
	auto_accept = {
		OR = {
			scope:recipient = {
				has_character_flag = RICE_recent_expedition_candidate
			}
			custom_description = {
				text = "spending_hook"
				subject = scope:actor
				object = scope:recipient
				scope:hook = yes
			}
		}
	}

	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no
}


